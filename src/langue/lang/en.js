export default {
  m: {
    mustLoan: 'Borrow',
    flow: 'Loan failure',
    returned: 'Refunded',
    settlement: 'Cleared',
    toInvest: 'Invest',
    zhang: 'Balances',
    zhanglist: 'Balances List',
    setting: 'Settings',
    blockBrowser: 'Blockchain Browser',
    proposal: 'Proposal',
    badloan: 'NPL',
    badloan_overdue: 'NPL(Overdue)',
    badloan_selling: 'NPL(Close position)',
    placeholder: 'Please enter product information',
    Home: 'Home',
    pChose: 'Please choose',
    userplaceholder: 'Account',
    Passplaceholder: 'Password',
    loginTitle: 'Log in',
    login: 'Log in',
    registerAccount: 'Create an account',
    back: 'Back',
    rePassplaceholder: 'Re-enter the password',
    tologinTitle: 'If you already have the ZOS account, please click here.',
    registing: 'Registering...',
    zichanmanage: 'Asset Management',
    my: 'Me',
    mine: 'Me',
    admin: 'Admin',
    history: 'Search',
    touziManage: 'Investment Management',
    jieqianManage: 'Loan Management',
    quit: 'Log out',
    chongtiManage: 'Withdrawal and deposit management',
    transfer1: 'Transfer',
    toubiaoing: 'Investing',
    toubiaosuccess: 'Completed',
    loading: 'Loading...',
    applyWaiting: 'Submitting...',
    inputPassword: 'Please enter the password.',
    userInfo: 'User\'s profile',
    noData: 'No Data',
    fuelCost: 'Gas Fee',
    year: 'month(s)',
    day: 'Day(s)',
    ays: 'days',
    month: 'month',
    months: 'Month',
    hours: 'h',
    minute: 'm',
    minutes: 's',
    no: 'Don\'t choose',
    notSupport: 'Unsupported browser',
    note: 'The browser (version) you are using has not been fully tested. We strongly recommend you to use Google Chrome to continue. After the fully testing in future, you may use this browser safely. Please make sure you know about the risk.',
    understand: 'I understand.',
    inviteFriends: 'Invite Friends',
    invites: 'Invite',
    website: 'Website',
    copySuccess: 'Copy success',
    sure: 'Confirm',
    cancel: 'Cancel',
    close: 'Close',
    initErr: 'Initialization failed',
    errInfo: ' All network node connections failed. Please check your network node or refresh later.',
    iUnderstand: 'I understand',
    friendLink: 'Friend Link',
    register: {
      title: 'Sign up',
      errorInfo1: 'Verification code error',
      accountName: 'Account name',
      specifyAccountName: 'The premium account name consists of 1-2 letters only, or 3-8 letters containing at least one of a, e, i, o, u, y',
      specifyAccount: 'Please appoint an existing account to pay for your premium account',
      vaCode: 'Captcha',
      change: 'Click to change',
      changeOne: 'Refresh',
      gPassword: 'Generated password',
      browserPass: 'The password was generated by your local browser.',
      owner: 'No one but you has access to the passward.',
      paste: 'Paste it below and save it carefully in a safe place.',
      conPass: 'Confirm',
      paidAccount: 'Premium Account',
      payAmount: 'Amount',
      noRecover: 'I understand that no one can recover my password if I lose or forget it.',
      safekeeping: 'I have written down or stored my account name and password.',
      isRead: 'I have read and agreed to',
      policyTitle: 'Privacy Policy',
      policy: 'The website will be strictly compliant with related laws and contents listed in the privacy policy to collect and use your information.',
      agreement: 'Terms of Use',
      success: 'Congratulations，you have signed up successfully! Now, you can log in with your account.',
      proposalSuccess: 'Application for premium account approved! Please wait for the payment account to pay',
      unNull: 'Password cannot be empty!',
      correctCode: 'Please enter the correct captcha code!',
      characters: 'Account name must be 1-63 characters long!',
      letterBegin: 'Account name must begin with a letter!',
      combination: 'Account name must be a combination of alphabets, numbers and dashes!',
      notEnd: 'Account name can not end with - ',
      noSame: 'Password and confirmed password do not match!',
      notCheck: 'You have not accepted our relevant policies for registration!',
      notSupport: 'Pure-letter password is not supported!',
      exists: ' The account name for the payment does not exist.',
      regFail: 'Registration failed',
      regSuc: 'Congratulations，you have registered successfully!',
      loginSuc: 'You have logged in!',
      nameNull: 'Account name and password can not be empty!',
      nameErr: 'Account name or password is incorrect!',
      unReg: 'The account name containing zos is not supported.'
    },
    simulated: 'Simulated data',
    orderList: {
      cash: 'Cash asset',
      numberZC: 'Crypto Assets',
      statutory: 'Fiat assets',
      bitType: 'Coin',
      useNum: 'Available',
      dJNum: 'Frozen amount',
      freeze: 'Frozen',
      operation: 'Action',
      depositMoney: 'Deposit Coins',
      WithdrawMoney: 'Withdraw coins',
      transferMo: 'Transfer coins',
      topup: 'Deposit',
      Withdraw: 'Withdraw',
      wodejiekuan: 'My loan',
      wodetouzi: 'My investment',
      jiedaiTotal: 'Total loan amount',
      jiedaiBS: 'Number of loans',
      daihaiTotal: 'Total amount due',
      daihaiBJ: 'Principal due',
      daihaiLX: 'Interest due',
      touziZE: 'Total investment amount',
      daishouZE: 'Total amount to be claimed ',
      daishouBJ: 'Principal to be claimed',
      daishouLX: 'Interest to be claimed',
      touziBS: 'Number of investments',
      shouyiXX: 'Profit Info',
      lJJZSY: 'Accumulated net profit',
      LJZFLX: 'Accumulated interest paid',
      YJBYLXSY: 'Estimated current month interest profit',
      YJBYZFLX: 'Estimated current month interest amount due',
      oper: 'Act',
      symbol: 'Currency',
      operNum: 'Amount',
      operTime: 'Date',
      operState: 'Status',
      topup_1: 'Unpaid',
      topup_2: 'Pending',
      topup_3: 'Completed',
      topup_9: 'Deposit has been cancelled.',
      chargeMoney_1: 'Deposited coins successfully！',
      chargeMoney_2: 'Under depositing',
      withdraw_1: 'Under Withdrawing',
      withdraw_2: 'Withdrawed successfully',
      withdraw_3: 'Failed to withdraw',
      withdrawMoney_1: 'Under coin-withdrawing',
      withdrawMoney_2: 'Withdrawed coins succeesfully',
      withdrawMoney_3: 'Failed to withdraw coins',
      check: 'check',
      gatewayRecords: 'gateway Records',
      kycRecords: 'KYC Records',
      authorid: 'author ID',
      kycInfo: 'KYC Info',
      refresh: 'Refresh record'
    },
    investDetails: {
      touBXXQR: 'Tips:',
      WXTS: 'Please check the loan information carefully. Click "Invest" means you confirmed the investment amount, and it\'s not possible to withdraw the investment.',
      WXTSNEXT: 'The price of collateral will be monitored by the platform all the time. The loss caused by the fluctuation of cryptocurrency will be shared by both platform and investors.',
      JKYH: 'Borrower',
      DQJD: 'Progress',
      SYKTJE: 'Available Balance',
      sYTBSJ: 'Remaining Time',
      QECN: 'All funds will be returned if the loan does not reach the full amount in the tender period.',
      diyawu: 'Collateral',
      diyaBILI: 'Risk Reserve Ratio',
      DYWDQJZ: 'Current Collateral Value',
      TBJE: 'Investment Amount',
      TBJEPlacholder: 'Please enter investment amount',
      minTZJE: 'Min investment',
      MinDZ: 'Increment by 100',
      KYYE: 'Available balance',
      YJSY: 'Estimated Profit',
      maybeSS: 'Potential loss',
      Topup: 'Deposit',
      LJFX: 'Learn more about risk',
      JKHT: 'Loan Contract',
      HTMB: 'Contract Template',
      checkQR: 'I have already confirmed my investment, and am willing to take the risk.',
      buttoQR: 'Invest',
      BXX: 'Alternatives',
      CKYHDetail: 'View user\'s credit and loan history Info',
      userName: 'Account name',
      JF: ' Points',
      ZOSBIT: 'ZOS coin',
      GJ: 'Nationality',
      ZCSJ: 'Registration time',
      proportion: '',
      exchange: 'to',
      inputPass: 'Please enter password',
      investConfirm: 'Confirmation',
      contract: 'Contract',
      contractDetail: 'Contract details',
      lookInvest: 'View Detail'
    },
    borrow: {
      title: 'Borrow',
      published: 'Published',
      history: 'History',
      creatBD: 'Create a loan request',
      setJKBD: 'Loan request settings',
      loanAmount: 'Amount',
      borrowCycle: 'Loan Term',
      HKFS: 'Payment Method',
      borrowRate: 'Loan Rate',
      borrowRates: 'Loan Rate',
      pawnNum: 'Collateral Amount',
      pawnNumState: 'Collateral Amount/Status',
      pawnValue: 'Collateral Value',
      JZRQ: 'Due date',
      XZDYW: 'Collateral',
      DYW: 'Cryptocurrency',
      DYSL: 'Amount',
      DYL: 'Collateral ratio',
      DYWZZ: 'Sum of collateral',
      WYDKTJ: 'Apply',
      WYDKCheck: 'I have read and agreed to the Loan Agreement.',
      WithTime: 'Loan start time',
      collateralInfo: 'Collateral Info',
      collateral: 'Collateral',
      collateralVal: 'Collateral Value',
      addCollateral: 'Add Collateral',
      collateralState: 'Collateral Status',
      frozen: 'Frozen',
      borrowRecord: 'Loan Record',
      repaymentSure: 'Confirmation',
      submiting: 'Submitting',
      orderFailure: 'The order is expired',
      repaySucc: 'Approved',
      repayFail: 'Failed',
      orders: 'Order',
      notRepay: 'Remaining payment amount',
      setLines: 'Borrow',
      minimum: 'Min loan',
      increasing: 'in increment of',
      method: 'Interest rate table',
      tender: 'Tender Period',
      dueUnder: 'All funds will be returned if the loan does not reach the full amount in the period.',
      cutDate: 'Closing Time',
      expect: '',
      toCharge: 'Deposit coins',
      ratio: 'Collateral Ratio',
      calculation: 'Collateral ratio equation',
      times: 'Ratio',
      fee: 'Fees',
      service: 'Platform Service Fee',
      risk: 'Risk Reserve',
      carrierServiceRate: 'Operator Service Fee',
      viewCoupon: 'View coupons',
      obligations: 'Obligations',
      obligations1: 'Risk-based margin will be applied. The amount will be 5% of loan amount. It will be deducted from your account automatically once the loan is issued.',
      obligations2: 'The platform and gateway will charge service fees. It will be 2% of the loan for platform service fee and 1% of the loan for gateways service fee. They will be deducted from your account automatically once the loan is issued.',
      obligations3: 'Regular repayment of interestes and principal will increase your personal credit. The collateral will be de-frozen automatically once you complete all repayment on time.',
      obligations4: 'For the prepayment, you have to pay the interest of the current installment, as well as the perpayment penalty.',
      obligations5: 'Please cover short positions on time when collateral prices fluctuate wildly, or mandatory liquidation and disposal of collateral will be conducted automatically ',
      obligations6: 'If you failed to pay before the due date, it\'ll be deemed overdue payment. Besides of regular interets, there will be an extra penalty and penalty interest applied.',
      obligations7: 'If you failed to make the repayment over 7 days, disposal of collateral will be authorised.',
      agreement: 'Agreement',
      agreements: 'Agreement',
      loan: 'Borrow',
      loanSure: 'Confirmation',
      costs: 'Platform Service Fee',
      inputNum: 'Please enter loan amount',
      moreThan: 'Exceed maximum loan amount',
      timeLimit: 'Please choose loan term',
      cutLimit: 'Please choose closing time',
      mortgage: 'Please choose collateral',
      lessThan: 'Collateral ratio can not be less than',
      inputMortgage: 'Please enter collateral amount',
      mortgageWrong: 'Format error',
      unNum: 'Insufficient collateral，please deposit coins.',
      mortgageLess: 'Collateral amount is less than the minimum value ',
      numLess: 'Insufficient ZOS',
      useLess: 'Insufficient，please deposit',
      leaveSure: 'Are you sure to leave this page?',
      note: 'Attention',
      notAsset: 'No fiat or collateral assets',
      error: 'Error',
      selectOther: 'Please choose other coins',
      getErr: 'Failed to obtian the information',
      waitingTimes: 'Please wait for a few minutes, then go to \'Borrow -> Published\' and refresh the page.',
      tradingTimeout: 'Your trasanction confirmation is timeout, please try it again.',
      close: 'Close',
      customRate: 'Custom Interest Rate',
      describe: 'You can customize the interest rate on the basis of the benchmark interest rate. Raising the interest rate will help you get investments quickly.',
      errDescribe: 'Custom interest rate should be higher than the benchmark interest rate, but cannot be higher than',
      benchmarkRate: 'Base rate',
      feesThat: 'Fees Instruction',
      feesThat1: 'Loan service fee includes Platform service fee, Operator service fee and risk margin.',
      feesThat2: 'Plarform service fee and risk margin are charged in',
      feesThat22: 'Operator service fee is charged in',
      // feesThat3: 'Platform service fee = Loan amount * feed price * proportion; Maximum',
      feesThat3: 'Flatform service fee: loan amount * exchange rate * ratio; Loan amount shall be more than',
      feesThat33: '，计',
      feesThat4: 'Risk margin = Loan amount * Feed price * Proportion; Maximum',
      feesThat5: 'Operator service fee = Loan amount * Proportion; Maximum',
      feesThat6: 'Operator service fee and risk margin will be frozen once your loan application passed.',
      feesThat7: 'Operator service fee will be deducted from the loan amount after the loan application is completed. But if the investments does not reach the full amount in the tender period, operator service fee and risk margin will be unfrozen.',
      giveupSure: 'Give up editing?',
      toAmount: 'Actual Amount',
      toAmountMethod: 'Actual amount calculation',
      toAmountMethod1: 'The lending commission includes platform service fee, operator service fee and risk margin',
      toAmountMethod2: 'The platform service fee and risk margin are charged in BTC; and the operator service fee is charged in CNY',
      toAmountMethod3: 'Platform service fee:=loan amount*feed price*ratio; up to 0.5BTC',
      toAmountMethod4: 'Risk margin=loan amount*feed price*ratio; up to 0.1BTC',
      toAmountMethod5: 'Operator service fee=loan amount*ratio; up to 500CNY',
      toAmountMethod6: 'The operator service fee and risk margin will be secured once your loan application passed',
      toAmountMethod7: 'The operator service fee will be deducted from the loan amount when the loan order is completed; if the order fails to collect full investment, the operator service fee and risk margin will be unfrozen',
      toAmountMethod8: 'Actual amount=loan amount-loan amount*operator service fee ratio',
      overdue: 'Loan overdue',
      unwind: 'Forced Liquidation',
      reason: 'Reason for NPL',
      badTime: 'Time of NPL',
      squeeze: 'Refund for the failed loan',
      deled: 'Deleted',
      toMethod: 'Net Amount = Loan Amount - Operator Service Fee',
      radio: 'Min mortgage times',
      payments: 'Monthly Interest',
      reimbursement: 'Payment method is the monthly payments of interests with one large balloon payment at maturity. You need to make the payment before or on the due date. Monthly interest =',
      principal: 'Repay the principal at the last due date.',
      cost: 'Total Fees',
      marginLine: 'Call margin line',
      openLine: 'Close position line',
      when: 'When ',
      down: 'price drops to',
      additional: 'you need to add the extra',
      liquidated: 'to avoid the position to be closed. When ',
      will: 'your loan will be closed.',
      loanStatus: 'Loan Status',
      tohandMethod: 'Net Amount = Loan Amount - Risk Reserve - Platform Service Fee',
      maxSupplyColl: '抵押币超过最大值e'
    },
    investingList: {
      toubiaojine: 'Investment amount',
      biaodijine: 'Loan amount',
      biaodijindu: 'Progress',
      julijiebiaoSJ: '',
      jujiebiaoSYSJ: '',
      CKXQXX: 'Click here for more information'
    },
    investingdetail: {
      shouyixinxi: 'Profit Info',
      yujiZSY: 'Estimated Total Profit',
      yujiSYL: 'Estimated ROI',
      toubiaoJINE: 'Investment Amount',
      toubiaoTime: 'Investment Date',
      toubiaoXX: 'Investment Info',
      JLJBSJ: '',
      JKXX: 'Loan Info',
      jieKR: 'Borrower',
      JKSC: 'Loan Period',
      FBSJ: 'Publishing Date',
      DYXX: 'Collateral Info',
      DYJLXX: 'Mortgage records',
      type: 'TYPE',
      TIME: 'TIME',
      info: 'INFO',
      FBDK: 'Publishing',
      TOUZI: 'Investment',
      haikuan: 'Repayment',
      startTime: 'Loan start time',
      borrowOrder: 'Order No.',
      yield: 'Estimated ROI = Estimated interest rate / Loan amount'
    },
    balance: {
      index: 'Index',
      curbalance: 'Current Balances',
      opbalance: 'Operate Balance',
      optype: 'Type',
      opinfo: 'Info'
    },
    transfer: {
      title: 'Transfer',
      loading: 'Loading...',
      XZBZ: 'Choose Currency',
      QXZ: 'Please choose',
      KY: 'Available',
      ZHM: 'To（Please check account name carefully）',
      ZZSL: 'Amount',
      BZ: '    Memo（Optional. The more words added, the more ZOS consumed.）',
      YJXH: 'Estimated consumption',
      YJXH1: 'Subject to the actual amount.',
      KYSL: 'Available',
      ZZBtn: 'Transfer',
      WXTS: 'Tips',
      WXTCNr1: 'Expect for ETH, please do not deposit any other coins to above address, or they can not be retrieved anymore. Please check the address carefully before making the tranfer to others',
      WXTCNr2: 'Contract may fail to execute when you withdraw coins to the contract address, which can fail the transaction and return assets to the platform.Platform will return assets to the original account, which will take a little bit long. Thank you for your understanding.',
      WXTCNr3: 'Network transfer fee is not fixed, depending on the computing power consumed by contract execution during transaction.The gas limit of withdrawing coins is 90000 on this platform. This is used for transferring or executing contract.If the transaction consumes more than 90000 gas, transfer will be not executed and assets will be returned to platform.Platform will return assets to the original account manually.Thank you for your understanding.',
      WXTCNr4: 'In order to keep funds safe, we will review the withdrawal process manually when your security strategy changes, or password was modifed or new withdrawal address is used in your account.Please wait for phone call or email from our staff patiently.',
      WXTCNr5: 'In case the information will be tampered or leaked, please keep your device and browser secure during the process.',
      addAsset: 'Add Asset',
      nullAsset: 'No asset',
      record: 'Record',
      accountNum: 'Received amount',
      about: 'appr.',
      get: 'Earn',
      useCoupons: 'Coupon first',
      couponsNum: 'Coupon amount',
      understandCoupons: 'Learn more about coupons',
      abountCoupons: 'About coupons',
      deduct: 'Coupons can deduct the gas fee for various operations.',
      monthOnce: 'Claim coupons once a month,',
      couponReset: 'The unused coupons will be cleared by the end of month.',
      getMethod: 'Earn ZOS through following methods:',
      getMethod1: 'Signing up',
      getMethod2: 'Inviting friends',
      getMethod3: 'Repayment',
      getMethod4: 'Investing',
      getMethod5: 'Transferring ZOS',
      numNull: 'Insufficient amount',
      transferSure: 'Confirmation',
      being: 'verifing',
      from: 'From',
      to: 'To',
      num: 'Amount',
      memo: 'Memo',
      failure: 'Failed to publish transaction',
      timeout: 'Your transaction confirmation timed out, please try again later.',
      addNum: 'Add Crypto Asset',
      addStatutory: 'Add Fiat Asset',
      inputNum: 'Please enter the transfer amount',
      nullNum: 'Insufficient amount, please make the deposit first.',
      unRules: 'The amount is not valid.',
      unZos: 'Insufficient ZOS, please make the deposit first.',
      inputName: 'Please enter your account name',
      inputRight: 'Please enter the correct account name',
      transferOwner: 'It\'s not allowed to make a transfer to your own account.',
      noName: 'This account is not found.',
      noFind: 'This account is not found.',
      selectCurreny: 'Please choose currency',
      transferSucc: 'Transfer successfully!',
      tradeConfirmed: 'The transaction has been confirmed.',
      will: 'will',
      transferTo: 'transfer to',
      gatewayContacts: 'Gateway contact',
      goto: 'go to',
      noGatewayUrl: 'No gateway available, please try again later.'
    },
    invest: {
      query_type_all: 'All',
      query_type_currency: 'Loan Currency',
      query_type_pawn: 'Collateral',
      query_type_pawns: 'Collateral',
      query_type_pawnrate: 'Value-to-Loan Ratio',
      collete_type_currency: 'Collateral',
      query_type_term: 'Loan Term',
      query_type_sort: 'Sort by',
      sort_type_time: 'Starting time',
      sort_type_sum: 'Loan Amount',
      sort_type_progress: 'Investment Progress',
      profit_after: 'Balloon Payment',
      firstRate: 'Balloon Payment',
      endDate: 'Closing Time',
      title: 'Invest',
      investSucc: 'Invested',
      history: 'History',
      toRefund: 'All funds will be returned if the loan does not reach the full amount within the tender period.',
      info: 'Investment Info',
      topUp: 'Deposit Coins',
      benefits: 'Learn more about profit and risk',
      inputInvest: 'Please enter investment amount',
      investFormat: 'Format error',
      investNull: 'Insufficient amount, please make the deposit first.',
      investGreater: 'The investment amount shall be no more than the available balance',
      investLess: 'The investment amount shall be no less than minimum investment.',
      investIncrease: 'Investment amount does not meet increment condition.',
      notInvest: 'It\'s not allowed to invest in the loan published by yourself.',
      noPassword: 'Password can not be empty',
      passwordErr: 'Incorrect password',
      success: 'Completed',
      investFail: 'Failed',
      basic: 'Basic Info'
    },
    borrowing: {
      title: 'Pending',
      name: 'Order',
      turnover: 'Capital Turnover',
      quantity: 'Collateral Amount/Value',
      investInfo: 'Investment Info',
      inputNum: 'Please fill in collateral info',
      according: 'According to latest',
      prepaid: 'At least',
      deposit: 'is required to deposit.',
      fedPrice: 'Latest feed price',
      feedPrice: 'feed price',
      cover: 'Amount',
      confirmed: 'Confirmation',
      formatErr: 'Format error',
      greater: 'Amount cannot be zero.',
      trade: 'Trading has already been confirmed.',
      mistake: 'Password error',
      crytop: 'Cryptocurrency',
      orderFeed: 'Order Feed Price',
      orderVal: 'Order Value',
      orderRadio: 'Value-to-loan Ratio',
      currentFeed: 'Current Feed Price',
      currentMortgage: 'Current Value-to-loan Ratio',
      currentVal: 'Current Value'
    },
    borrowsuccess: {
      title: '借款成功(没用到）',
      tab_title_repayments: 'Repaying',
      tab_title_completed: 'Completed loan',
      borrow_view_details: 'View details',
      repayment_cycle: 'Repayment Peroid',
      repayment_sum: 'Repayment Amount',
      repaymentAllSum: 'Total Repayment Amount',
      repayment_day: 'Repayment Date',
      repayment_state: 'Repayment Status',
      repayment_day_state: 'Repayment Date/Status',
      state: 'Status',
      borrow_sum: 'Loan Amount',
      borrowSum: 'Loan Amount',
      pawnState: 'Collateral Status',
      repayment_btn: 'Repayment',
      pawn_warn: 'Insufficient collateral value can lead to the risk of losing all collaterals.',
      pawn_add: 'Please add more collateral',
      interest: 'Interest',
      penaltyInterest: 'Daily Penalty interest',
      nper: 'Period',
      should: 'Amount Due',
      shouldDate: 'Due Date',
      realAmount: 'Actual Repayment Amount',
      realDate: 'Actual Repayment Date',
      shouldGet: 'Amount Receivable',
      shouldDateGet: 'Due Date',
      realAmountGet: 'Pay-in Amount',
      realDateGet: 'Collection Date',
      normal: 'Normal',
      remaining: 'Remaining',
      withOut: 'Overdue',
      out: 'Overdue',
      alsoInterest: 'Pay Interest',
      principal: 'Principal',
      repayment: 'Pay Principal',
      prepayment: 'Prepayment',
      information: 'Loan Info',
      titleStatus: 'Order/Status',
      numNper: 'Loan Amount/Term',
      hasDel: 'Default',
      repayed: 'Paid',
      confiscated: 'Confiscated',
      thawed: 'Frozen',
      early: 'Repay the principal in advance',
      overdueRepay: 'Principal overdue',
      lookDetail: 'View Details',
      balance: 'Insufficient Balance',
      topUp: 'Please Deposit',
      payment: 'Overdue Penalty Rate',
      dueBreach: 'Penalty for Prepayment',
      penalty: 'Overdue Penalty',
      total: 'Total Due Amount',
      feeDistribution: 'Fees allocation',
      borrowRate: 'Borrower operator income',
      invesetRate: 'Investor operator income',
      borrowRate1: 'Borrower operator income',
      invesetRate1: 'Investor operator income',
      borrowincome: 'Borrower reference income',
      investincome: 'Investor reference income',
      getway: 'Gateway income',
      platform: 'Platform income',
      selectDate: 'Date',
      selectMonth: 'Month'
    },
    investList: {
      title: 'Pending',
      investSum: 'Investment Amount',
      investTime: 'Investment Time',
      allInvestSum: 'Loan Amount',
      investProgress: 'Investment Progress',
      addInvest: 'Add Investment',
      earnedIncome: 'Profit Earned',
      realIncome: 'Actual Profit',
      realIncomeRate: 'ROI',
      remainingTime: 'Remaining Time',
      investLimitTime: 'Tender Period',
      investRate: 'Interest Rate',
      income: 'Rresidual Profit',
      invested: 'Amount Invested',
      investedPro: 'Investing Progress',
      deadline: 'Remaining Time',
      timeRate: 'Loan Term/Rate'
    },
    index: {
      latest_status: 'Latest status',
      last_updated_at: 'Last update at : {seconds} seconds ago',
      summary: {
        title: 'Block Info',
        head_block_number: 'Head Block',
        last_irreversible_block_num: 'Latest irreversible block',
        block_interval: 'Block interval(seconds)',
        recently_missed_count: 'Recently missed',
        total_supply: 'Total supply',
        circulating_supply: 'Circulating supply'
      },
      witness: {
        title: 'Active witness',
        witness: 'Witness',
        last_confirmed_block: 'Last confirmed block',
        votes: 'Total votes'
      },
      committee: {
        title: 'Active committee members',
        account: 'Account',
        votes: 'Total votes'
      },
      transactions: {
        title: 'Recent transaction records',
        type: 'Type',
        content: 'Content',
        time: 'Time'
      }
    },
    // block
    block: {
      id: 'Block ID',
      title: 'Block Info',
      more: 'More',
      timestamp: 'Block generating time',
      high: 'Block High',
      witness: 'Witness',
      previous: 'Previous block',
      transactions: 'Trasanction amount',
      empty: 'No record',
      error: 'fetch error'
    },
    // transaction
    transaction: {
      title: 'Trasanction Info',
      error: 'Error, failed to load trasanction Info',
      empty: 'No record, Possible reason: The transaction information has not yet been recorded to the irreversible block',
      current_block_number: 'Current block',
      trx_type: 'Type',
      trx_op: 'Operation Info',
      trxTypes: {
        'all': 'Show all',
        'transfer': {
          name: 'Transfer',
          from: 'From',
          amount: 'Amount',
          to: 'To',
          fee: 'Fee'
        },
        'limit_order_create': 'Place order',
        'limit_order_cancel': 'Cancel order',
        'call_order_update': 'Update margin',
        'account_create': {
          name: 'Open an account',
          fee: 'Fee',
          registrar: 'Registrant',
          referrer: 'Referrer',
          account: 'Account name'
        },
        'account_update': {
          name: 'Update account',
          fee: 'Fee',
          account: 'Account name'
        },
        'account_whitelist': {
          name: 'Account white list ',
          fee: 'Fee',
          authorizing_account: 'Authorizing account',
          account_to_list: 'Listed account ',
          new_listing: 'Action',
          whitelist_states: {
            no_listing: 'Unlisted',
            white_listed: 'Whitelisted',
            black_listed: 'Blacklisted',
            white_and_black_listed: 'Whitelisted and blacklisted'
          }
        },
        'account_upgrade': {
          name: 'Upgrade account',
          account_to_upgrade: 'Upgrade account',
          fee: 'Fee',
          upgrade_to_lifetime_member: 'Updated to lifetime member'
        },
        'account_transfer': {
          name: 'Transfer account',
          account_id: 'Account id',
          new_owner: 'New owner',
          fee: 'Fee'
        },
        'asset_create': {
          name: 'Create assets',
          fee: 'Fee',
          issuer: 'Issuer',
          symbol: 'Symbol',
          precision: 'Precision',
          max_supply: 'Maximum supply',
          description: 'Description',
          market_fee: 'Market fee',
          maximum_market_fee: 'Maximum market fee'
        },
        'asset_update': 'Update asset',
        'asset_update_bitasset': 'Update coins',
        'asset_update_feed_producers': 'Update assets feed price producer',
        'asset_issue': {
          name: 'Asset issuer',
          fee: 'Fee',
          issuer: 'Issuer',
          asset_to_issue: 'Amount',
          issue_to_account: 'To'
        },
        'asset_reserve': 'Reserve assets',
        'asset_fund_fee_pool': 'Fund asset fee pool',
        'asset_settle': 'Asset settlement',
        'asset_global_settle': 'Global asset settlement',
        'asset_publish_feed': 'Publish feed price',
        'committee_member_create': 'Create committee member',
        'witness_create': 'Create witness',
        'witness_withdraw_pay': 'Witness rewards withdraw ',
        'proposal': {
          proposal_create: 'Create proposal',
          proposal_update: 'Update proposal',
          proposal_delete: 'Delete proposal',
          review_period: 'Review period starts ',
          expiration_time: 'Expiration time',
          proposed_ops: 'Proposal action',
          fee_paying_account: 'Payment account',
          fee: 'Fee',
          update: {
            active_approvals_to_add: 'Active approvals to add',
            active_approvals_to_remove: 'Active approvals to remove ',
            owner_approvals_to_add: 'Owner approvals to add',
            owner_approvals_to_remove: 'Owner approvals to remove',
            key_approvals_to_add: 'Key approvals to add',
            key_approvals_to_remove: 'Key approvals to remove'
          }
        },
        'withdraw_permission_create': 'Create withdrawal permission',
        'withdraw_permission_update': 'Update withdrawal permission',
        'withdraw_permission_claim': 'Claim withdrawal permission',
        'withdraw_permission_delete': 'Delete withdrawal permission',
        'fill_order': 'Fill order',
        'delegate_update_global_parameters': 'Global parameter update',
        'vesting_balance_create': 'Create frozen balance',
        'vesting_balance_withdraw': {
          name: 'Withdraw unfrozen balance',
          owner: 'To',
          amount: 'Amount',
          fee: 'Fee'
        },
        'worker_create': 'Create worker',
        'custom': 'Custom',
        'assert': 'Assert operation',
        'balance_claim': 'Claim balance',
        'override_transfer': {
          name: 'Override transfer',
          fee: 'Fee',
          issuer: 'Issuer',
          from: 'From',
          to: 'To',
          amount: 'Amount'
        },
        'witness_update': 'Update witness',
        'committee_member_update_global_parameters': 'Global parameter update',
        'transfer_to_blind': 'Transfer to private account',
        'blind_transfer': 'Blind transfer',
        'transfer_from_blind': 'Transfer from private account',
        'committee_member_update': 'Update committee member account',
        'asset_claim_fees': 'Claim asset fee ',
        'account_upgrade_merchant': {
          name: 'Merchant authentication',
          account_to_upgrade: 'Update account',
          auth_referrer: 'Verification account',
          upgrade_to_merchant_member: 'Verified as merchant',
          fee: 'Fee'
        },
        'account_upgrade_datasource': {
          name: 'DataSource verify',
          account_to_upgrade: 'Update account',
          auth_referrer: 'Authentication account',
          upgrade_to_datasource_member: 'Upgrade to datasource member',
          fee: 'Fee'
        },
        'data_market_category_create': {
          name: 'Create category',
          category_name: 'Category name',
          issuer: 'Issuer',
          fee: 'Fee',
          create_date_time: 'Time'
        },
        'data_market_category_update': {
          name: 'Update category',
          category: 'Category ID',
          new_category_name: 'Category name',
          new_status: 'New status',
          fee: 'Fee'
        },
        'free_data_product_create': {
          name: 'Create free market data product',
          product_name: 'Product name',
          issuer: 'Issuer',
          fee: 'Fee',
          create_date_time: 'Time'
        },
        'free_data_product_update': {
          name: 'Update free market data product',
          free_data_product: 'Product ID',
          new_product_name: 'New product name',
          new_status: 'New status',
          fee: 'Fee'
        },
        'league_data_product_create': {
          name: 'Create league data product',
          product_name: 'Product name',
          issuer: 'Issuer',
          fee: 'Fee',
          create_date_time: 'Time'
        },
        'league_data_product_update': {
          name: 'Update league data product',
          free_data_product: 'Product ID',
          new_product_name: 'New product name',
          new_status: 'New status',
          fee: 'Fee'
        },
        'league_create': {
          name: 'Create league',
          league_name: 'League name',
          fee: 'Fee',
          create_date_time: 'Time'
        },
        'league_update': {
          name: 'Update league',
          league: 'League ID',
          new_league_name: 'New league name',
          new_status: 'New status',
          fee: 'Fee'
        },
        'data_transaction_create': {
          name: 'Data trasanction created',
          request_id: 'Request ID',
          product_id: 'Product name',
          version: 'Version',
          fee: 'Fee',
          requester: 'Requester',
          create_date_time: 'Time'
        },
        'data_transaction_update': {
          name: 'Update data transaction',
          request_id: 'Request ID',
          fee: 'Fee',
          new_requester: 'New requester',
          new_status: 'New status'
        },
        'data_transaction_pay': {
          name: 'Data transaction pay',
          fee: 'Fee',
          from: 'From',
          to: 'To',
          amount: 'Amount',
          request_id: 'Request ID'
        },
        'account_upgrade_data_transaction_member': {
          name: 'Transaction node authentication',
          fee: 'Fee',
          account_to_upgrade: 'Update account',
          upgrade_to_data_transaction_member: 'Authorized as transaction confirmation node'
        },
        'data_transaction_datasource_upload': {
          name: 'Copyright stored',
          request_id: ' Request ID',
          requester: 'Requester',
          datasource: 'Data source',
          fee: 'Fee'
        },
        'data_transaction_datasource_validate_error': {
          name: 'Data transaction fail ',
          request_id: 'Request ID',
          datasource: 'Data source',
          fee: 'Fee'
        },
        'balance_lock': {
          name: 'Frozen balance',
          create_date_time: 'Start time',
          amount: 'Lockup Amount',
          program_id: 'Frozen period',
          term: 'Term',
          interest_rate: 'Annualized Bonus'
        },
        'balance_unlock': {
          name: 'Balance unlock',
          account: 'Unlock account',
          lock_id: 'Lock ID'
        },
        'proxy_transfer': {
          name: 'Proxy transfer',
          from: 'From',
          to: 'To',
          amount: 'Amount',
          memo: 'Memo',
          proxy_memo: 'Proxy memo',
          proxy_account: 'Proxy Account',
          fee: 'Fee'
        },
        'account_property': 'Authorized gateway or operator',
        'gateway_withdraw': 'Withdraw coins',
        'gateway_deposit': 'Deposit',
        'gateway_issue_currency': 'Issue coins for gateway',
        'bitlender_option_create': 'Create fiat currency parameters',
        'bitlender_option_author': 'Create fiat currency committee',
        'bitlender_option_update': 'Update fiat currency parameters',
        'bitlender_rate_update': 'Update fiat currency interest rate',
        'asset_property': 'Authorized assets are fiat currency or collateral crypto currency',
        'bitlender_lend_order': 'Create loan order',
        'bitlender_invest': 'Investment order',
        'bitlender_repay_interest': 'Interest repayment',
        'bitlender_overdue_interest': 'Overdue interest repayment',
        'bitlender_repay_principal': 'Principal repayment',
        'bitlender_prepayment': 'Early principal repayment',
        'bitlender_overdue_repay': 'Overdue principal repayment',
        'bitlender_add_collateral': 'Add collateral',
        'bitlender_recycle': 'Process defaulted loan',
        'status_states': {
          0: 'Unpublished',
          1: 'Published',
          2: 'Deleted'
        }
      },
      operation: {
        'pending': ' pending %(blocks)s blocks',
        'no_recent': 'No recent trasanctions',
        'reg_account': '{registrar} registered the account {new_account}',
        'transfer': '{from} from {amount} to {to}',
        'account_create': '{registrar} registered {account}',
        'account_transfer': '{account} transferred {new_account}',
        'proposal_create': '{account} created a proposed transaction',
        'proposal_update': '{account} updated a proposed transaction',
        'proposal_delete': '{account} deleted a proposed transaction',
        'fill_order': '{account} bought {received} at {price}',
        'vesting_balance_withdraw': '{account} withdrew vesting balance of {amount}',
        'balance_claim': '{account} claimed a balance of {amount}',
        'publish_feed': '{account} published feed price of {price}',
        'set_proxy': '{account} set {proxy} as his/her voting proxy',
        'update_account': '{account} updated account Info',
        'limit_order_sell': '{account} placed an order to sell {amount} at {price} ',
        'limit_order_buy': '{account} placed an order to buy {amount} at {price}  ',
        'call_order_update': '{account} changed {debtSymbol} debt by {debt} and collateral by {collateral}',
        'asset_reserve': '{account} reserved {amount}',
        'asset_issue': '{account} issued {amount} to  {to}',
        'asset_create': '{account} created the asset {asset}',
        'asset_update': '{account} updated the asset {asset}',
        'asset_update_bitasset': '{issuer} modified smart asset {currency} parameters',
        'lifetime_upgrade_account': '{account} has been updated to lifetime member',
        'annual_upgrade_account': '{account} has been updated to annual member',
        'unlisted_by': '{lister} removed  {listee} from the list',
        'whitelisted_by': '{lister} whitelisted the account {listee}',
        'account_whitelist': '{lister} updated white list',
        'blacklisted_by': '{lister} blacklisted the account {listee}',
        'limit_order_cancel': '{account} cancelled the order #%(order)s',
        'transfer_account': '{account} ownership transferred to {to}',
        'asset_update_feed_producers': '{account} updated the feed producers for the asset {asset}',
        'asset_fund_fee_pool': '{account} deposited {amount} into {asset} service fee pool ',
        'asset_settle': '{account} requested settlement of {amount}',
        'asset_global_settle': '{account} requested global settlement of {asset} at {price}',
        'witness_create': '{account} is updated to be a witness',
        'witness_update': '{account} updated witness Info',
        'witness_pay': 'withdrew witness revenue to account',
        'witness_receive': 'Received witness from witness',
        'worker_create': '{account} created budget proposal，and requested to pay {pay} daily',
        'committee_member_update_global_parameters': '{account} updated the global committee parameters',
        'override_transfer': '{issuer} sent {amount} from {from} to {to}',
        'account_upgrade_merchant': '{account} was upgraded to merchant',
        'account_upgrade': '{issuer} is updated to premium member',
        'account_upgrade_datasource': '{account} was upgraded to data source',
        'data_market_category_create': '{issuer} created category {category} ',
        'data_market_category_update': '{issuer} passed the proposal and updated the category {category}',
        'free_data_product_create': '{issuer} created free market data product {product}',
        'free_data_product_update': '{issuer} passed the proposal and updated the free market product {product}',
        'league_data_product_create': '{issuer} created league data product {product}',
        'league_data_product_update': '{issuer} passed the proposal and updated the league data product named  {product}',
        'league_create': '{issuer} created league {league}',
        'league_update': '{issuer} passed the proposal and updated the league {league}',
        'data_transaction_create': '{account} published a data trasanction ',
        'data_transaction_update': '{account} updated a data trasanction ',
        'data_transaction_pay': '{from} payed {amount} for data transaction to {to}',
        'account_upgrade_data_transaction_member': '{account} was upgraded to data transaction confirm node',
        'data_transaction_datasource_upload': '{account} confirmed an data upload from {datasource}',
        'data_transaction_datasource_validate_error': '{account} returned an error when processing the data upload',
        'balance_lock': '{account} {account} locked {amount} for loyalty program',
        'balance_unlock': '{account} completed an action of unfreezing balance in loyalty plan',
        'proxy_transfer': '{from} sent {amount} to {to} delegated by {account}',
        'account_property': '{issuer} authorized gateway or operator',
        'gateway_withdraw': '{issuer} withdrew {amount}{currency}',
        'gateway_deposit': '{issuer} deposited {amount}{currency}',
        'gateway_issue_currency': '{issuer} issued coins to gateway',
        'bitlender_option_create': '{issuer} created fiat currency parameters',
        'bitlender_option_author': '{issuer} created fiat currency committee',
        'bitlender_option_update': '{issuer} modified fiat currency parameters',
        'bitlender_rate_update': '{issuer} modified fiat currency interest rate ',
        'asset_property': '{issuer} authorized asset as fiat currency or collateral crypto currency',
        'bitlender_lend_order': '{issuer} created loan order {id}',
        'bitlender_invest': '{issuer} invested order {id}',
        'bitlender_repay_interest': '{issuer} paid {n} period interest on time',
        'bitlender_overdue_interest': '{issuer} paid {n} period overdue interest',
        'bitlender_repay_principal': '{issuer} paid principal {id} on time',
        'bitlender_prepayment': '{issuer} repaid {id} in advance',
        'bitlender_overdue_repay': '{issuer} added {n} {currency} to loan order',
        'bitlender_add_collateral': '{issuer} added collateral',
        'bitlender_recycle': '{issuer} processed the defaulted loan {id} ',
        'bitlender_setautorepayer_operation': 'automatic repayment account'
      }
    },
    // account
    account: {
      title: ' Account Info',
      empty: 'Account Info can not be found',
      membership: {
        lifetime: 'Lifetime',
        normal: 'Basic',
        merchant: 'Merchant',
        datasource: 'Datasource',
        data_transaction_member: 'Data Transaction Witness'
      },
      basic: {
        title: 'Basic Info',
        more: 'More',
        account_name: 'Account name',
        account_id: 'Account ID',
        membership: 'embership',
        referrer_name: 'Referrer'
      },
      permissions: {
        title: 'Permissions',
        active: 'Active permissions',
        owner: 'Owner permissions',
        threshold: 'Threshold'
      },
      balances: {
        title: 'Account balance',
        asset: 'Assets',
        balance: 'Balance'
      }
    },
    // api
    api: {
      title: 'API instruction',
      query_supply: 'Query Supply',
      query_block: 'Query Block',
      query_transaction: 'Query Transaction',
      query_account: 'Query Account',
      query_account_balance: 'Query Account Balance',
      get_account_header: 'Get Account Header'
    },
    header: {
      block: 'Block',
      transaction: 'Transaction',
      account: 'Account',
      about: 'About',
      language: 'Language: Chinese',
      flag: 'zh',
      title: 'Block chain explorer',
      subtitle: 'We provide query service for block, transaction, account and etc. '
    },
    params: {
      title: 'Parameter',
      update: 'Modify',
      submit: 'Submit',
      name: '',
      nper: 'Period',
      cnper: '',
      paramVal: '',
      updateAfter: 'Modified ',
      restore: 'Restore',
      del: 'Delete',
      borrowParam: 'Loan parameter',
      paramValue: '',
      rate: 'Fee & Allocation',
      operating: 'Operation parameter',
      proposal: 'Create a proposal of modifying parameter',
      review: 'Review period starts',
      proposalContent: 'Proposal content',
      Due: 'Expiry time',
      payAccount: 'Payment account',
      poundage: 'Fee',
      create: 'Create',
      updateRate: 'Confirmation',
      updateContent: 'Modified content',
      updateUser: 'Modifier',
      updateTime: 'Time',
      operator: 'Operator',
      gateway: 'Gateway',
      rateUser: 'Interest-rate modifier',
      platform: 'Platform',
      minBorrow: 'Min loan',
      minBorrowIn: 'Min loan increment',
      minInvest: 'Min investment',
      minInvestIn: 'Min investment increment',
      maxTime: 'Max loan term',
      timeUnit: 'Loan term unit',
      maxInvest: 'Max tender period',
      maxRate: 'Max loan rate',
      rateVal: 'Max monthly interest',
      repayNote: 'Payment time reminder (from the due date)',
      riskRate: 'Risk reserve rate',
      serviceRate: 'Service fee rate',
      business: 'Allocation propertion of fees',
      proposed: 'Allocation propertion for referrer',
      operatorAllo: 'Allocation proportion for operator',
      platformAllo: 'Allocation propertion for platform',
      fiatGateway: 'Allocation propertion for fiat-currency gateway',
      debitReference: 'Allocation propertion for borrower\'s referrer',
      creditReference: 'Allocation propertion for lender\'s referrer',
      lateGetting: 'Time period from overdue-payment loan to NPL',
      overdueInterest: 'Penalty rate of overdue interest',
      latePayment: 'Penalty ratio for overdue principal',
      dueBreach: 'Penalty ratio of early principal payment',
      overdue: 'Max overdue period',
      newPeriods: 'Number of new instalments or loan rate cannot be empty.',
      samePeriods: 'with same installments',
      deleteFirst: 'Delete ',
      interestRate: 'Interest Rate',
      the: 'No.',
      proposalsSucc: 'Submitted successfully， please wait for agree',
      dueInterest: 'Daily penalty rate of overdue interests',
      noupdate: 'No modification',
      carrierServiceRate: 'Rate of fiat charged by operator',
      budgetMember: 'Members of Sub-committee',
      investParam: 'Investment parameter',
      paymentParam: 'Payment parameter',
      rateParam: 'Fee parameter',
      carrierServer: 'Allocation proportion of operator service fee',
      platformServer: 'Allocation proportion of platform service fee',
      maxRiskMargin: 'Ceiling limit of risk margin',
      platformServiceRate: 'Rate of platform service fee',
      maxPlatformRate: 'Top limit of platform service fee',
      carrierRate: 'Rate of operator service fee',
      maxCarrierService: 'Top limit of operator service fee',
      carrierServiceLoan: 'Allocation proportion for borrower\'s operator',
      carrierServiceInvest: 'Allocation proportion for investor\'s operator',
      platformServiceLoan: 'Allocation proportion for borrower\'s operator',
      platformServiceInvest: 'Allocation proportion for investor\'s operator',
      loanRefer: 'Allocation proportion for borrower\'s referrer',
      investRefer: 'Allocation proportion for investor\'s referrer',
      platformServicePlatform: 'Allocation proportion for platform',
      platformServiceGateway: 'Allocation proportion for gateway',
      overdueLiquidation: 'Time period from overdue principle to NPL',
      investors: 'Principal guarantee rate for investor',
      once: 'One-time charge based on the overdue interests.',
      oncePro: 'One-time charge based on the amunt of principal.',
      insterest: 'Based on the unpaid interests',
      overRate: 'Calculate by the day based on the overdue interests',
      proOver: 'Deemed to be principle overdue beyond the period',
      chooseMore: 'Multiple choice',
      nopermission: 'You have no authority to modify the parameter.',
      addParams: 'Add parameter',
      greaterThan: 'Cannot be greater than',
      lessThan: 'Cannot be less than',
      year: 'Year',
      getFeeders: 'Feed Price Producer',
      decimal: 'Enter up to one decimal place.',
      greater: 'The rate must be more than zero.',
      decimalPlaces: 'Enter up to one decimal place, which cannot be zero, cannot exceed',
      Minimum: 'The minimum loan amount shall be a whole number greater than zero, and ',
      isYes: 'is',
      integer: 'the times of',
      thanZero: 'a whole number greater than zero.',
      MinimumThan: 'The minimum loan amount increase should be a whole number greater than zero, and ',
      borrowing: 'the loan term shall be a whole number greater than zero.',
      largest: 'The maximum tender period shall be a whole number greater than zero.',
      biggest: 'The maximum loan rate shall be greater than zero with up to one decimal place.',
      zeroUp: 'greater than zero with up to one decimal place.',
      monthlyInterest: 'The maximum monthly rate shall be a whole number greater than zero.',
      investment: 'The minimum investment amount shall be a whole number greater than zeor, and ',
      investmentIncrease: 'the minimum investment increase should be a whole number greater than zero, and ',
      reminderTime: 'the time of payment reminder shall be a whole number greater than zero.',
      marginRate: 'The risk reserve rate shall be greater than zero, and ',
      digital: 'the upper limit for risk reserve shall be greater than zero.',
      numberGreater: 'A number greater than zero',
      chargeRate: 'The percentage of platform service fee shall be a whole number greater than zero, and ',
      digitalPlatform: 'the upper limit of platform service fee shall be greater than zero, ',
      greaterEqual: 'and shall be a whole number greater than or equal to zero.',
      operatorsCap: 'The upper limit of operator service fee shall be greater than or equal to zero.',
      thanOrEqual: 'a number greater than or equal to zero',
      allocationProportion: 'The allocation percentage for borrowers\' operator shall be a whole number greater than or equal to zero, and the sum of the allocation percentages for borrower\'s operator and invester\'s operator is ',
      sumOf: '100.',
      proportionAs: 'The allocation percentage for investors\' operator shall be a whole number greater than or eqnual to zero, and the sum of the allocation percentages for investor\'s operator and  borrower\'s operator is 100.',
      debitOperator: 'The allocation proportion for borrower\'s operator shall be a whole number greater than zero,and the sum of the allocation proportions for borrower\'s operator and  platform is 100.',
      investorsOperator: '投资方运营商分配比例应为大于等于0的整数, 且平台服务费分配比例之和为100',
      debitRatio: '借方推荐人分配比例应为大于0的整数, 且平台服务费分配比例之和为100',
      investorReference: '投资方推荐人分配比例应为大于0的整数, 且平台服务费分配比例之和为100',
      serviceAllocation: '的整数, 且平台服务费分配比例之和为100',
      moreThan: 'greater than',
      dinteger: 'whole number',
      fiatGateways: '法币网关分配比例应为大于0的整数, 且平台服务费分配比例之和为100',
      principalOverdue: 'The time of NPL from principal overdue shall be a whole number greater than zero.',
      overdueFines: 'The penalty ratio of overdue interest shall be a whole number greater than zeor.',
      thePrincipal: 'The penalty ratio of overdue principal shall be a whole number greater than zeor.',
      penalty: 'The penalty ratio of prepayment shall be a whole number greater than zeor.',
      onlyEnter: 'Enter up to one decimal place, and it cannot be zero.',
      ShouldBe: 'shall be a whole number greater than zero.',
      already: 'The user is already the rate modifier.',
      noNull: 'Operator cannot be empty.',
      addFeeder: 'Add',
      isFeeder: 'The user is already the feed price producer.',
      feederFlag: 'Feed Price Mode',
      feederProposal: 'Create a proposal for feed price producer.',
      management: 'Parameter management',
      index: 'No.',
      account: 'Account name',
      enter: 'Please enter the account name.',
      price: 'feed price',
      data: 'feed price data',
      people: 'Publisher',
      clearing: 'Settlement price',
      handling: 'exchange rate of service fee',
      mortgage: 'Maintain the mortgage rate',
      limit: 'the upper limit for the forced closing',
      witnesses: 'Witness',
      board: 'Committee',
      directors: 'Sub-committee',
      specified: 'Appoint a feed price producer',
      allowedCollate: 'Coin for mortgage',
      carrierAdmin: 'Operator Management',
      addCarrier: 'Add Operator',
      isCarrier: 'The user is not the operator for this currency, please re-enter it.',
      isNull: 'Operator cannot be empty.',
      waring: 'This operation will clear all configurations, please be carefull.',
      inUsername: 'Please enter ',
      inCarrier: 'the name of operator',
      admin: 'Administration',
      loanCarrier: 'Borrower Operator',
      investCarrier: 'Investor\'s Operator',
      unConfig: 'config is corrupted, please reset the whole config (',
      ratioNull: 'Min value-to-loan ratio cannot be empty.',
      ratioNumber: 'Min value-to-loan ratio shall be a number.',
      isFeed: 'current feed price is ',
      chooseOne: 'Please choose a cryptocurrency for collateral at least.',
      currentUser: 'The current user is not',
      chooseCarrier: 'Choose an operator',
      credibility: 'Credibility',
      recovery: 'Collateral recovery',
      taste: 'Compensation fiat',
      noAllowed: '没有设置可抵押币e',
      chooseGateway: '请选择网关e',
      chooseAuthor: '请选择认证人e',
      theme: 'Theme',
      chooseTheme: 'Select Theme',
      author: 'Author',
      valiRatio: '请输入0到100之间的数字',
      noGateway: 'No gateway',
      noAuthor: 'No author'
    },
    kyc: {
      statues1: 'no author info',
      statues2: 'no this author',
      statues3: 'auther info changed',
      statues4: 'author expiration time',
      statues5: 'author does not support this asset'
    },
    badloans: {
      untreated: 'Undiposed',
      handled: 'Disposed',
      badTime: 'Period turning into NPL',
      detail: 'Details',
      deal: 'Dispose',
      assetDeal: 'Dispose NPL',
      maximum: 'Max loss rate for investor ',
      repayNum: 'Payment Amount',
      proportion: 'Remaining Amount',
      transferred: 'After you pay all the interests and principal, the collateral will be returned to your account.',
      subSucc: 'Submitted successfully'
    },
    invite: {
      title: 'Invitation methods',
      inviteCode: 'APP invitation code',
      copyInvite: 'Copy invitation code',
      inviteUrl: 'WEB invitation link',
      copyUrl: 'Copy link',
      copySucc: 'The address has been pasted in your clipboard!',
      inviteFriends: 'Invite friends to register ZOS and earn transaction benefits easily.',
      activity: 'Activity details',
      inviteContent: 'After your friend accepts the invitation and completes the signing-up,  you will get the reward in proportion for each of his/her loan or investment.',
      inviteContent1: 'The reward will be released in the collateral currency as soon as the loan is 100% invested.',
      inviteContent2: 'The release and rate of reward are excecuted automatically by smart contracts, which can be modified by community through voting.',
      inviteContent3: 'The more Referral, the more rewards you can get.',
      inviteContent4: 'If a user is invited more than one time, only the first inviter can be identified as his/her reference.'
    },
    set: {
      currentlyNode: 'Current node',
      availableNode: 'Available node',
      connection: 'Connection',
      addNode: 'Add nodes',
      name: 'Name',
      address: 'Address',
      delNode: 'Delete node',
      confirmDel: 'Are you sure to delete?',
      isNode: 'Node',
      inputNode: 'Please enter node address',
      mustNode: 'Node address must start with wss:// or ws://',
      exsit: 'The address is existed, please do not added repeatedly',
      lowLatency: 'Low latency',
      delayIn: 'Middle latency',
      hignDelay: 'High latency',
      unConnect: 'Unable to connect to API node',
      trying: 'Trying to use other online nodes',
      accessPoint: 'Access point',
      faucetAddress: 'Faucet',
      accountInfo: 'Account Info',
      permission: 'Permissions Info',
      bankAdmin: 'Card management',
      faucetUse: 'The faucet address is used to pay the registration fee for new users.',
      faucetUrl: 'URL format incorrect',
      setup: 'General Setting'
    },
    address: {
      add: 'Add address',
      edit: 'Edit',
      addressAdmin: 'Withdrawal address management',
      mention: 'Withdrawal address',
      isDel: 'Do you want to delete the withdrawal address? ',
      unDel: 'Deletion cancelled',
      selectAddress: 'Please choose an address for withdrawing coins.',
      noAddress: 'No address was added.',
      submitErr: 'Failed to submit, please try it again.'
    },
    bankcard: {
      cardNum: 'Card number',
      openAccount: 'Card issuer',
      addNum: 'Add Bank Cards',
      bankAdmin: 'Card address management',
      openName: 'Holder',
      certificate: 'ID number',
      bankNum: 'Card number',
      openBank: 'Card issuer',
      notSupport: 'Please type in your card number. Pasting the number is not valid.',
      reserved: 'Reserved phone number',
      consistent: 'Account holder must match the authenticated name, or withdrawal fails ',
      pSelect: 'Please choose the bank',
      corresponding: 'The card number does not match the account bank, please enter again.',
      inputNum: 'Please enter the card number!',
      unCorrect: 'Format error',
      notSupportBank: 'This card is not supported',
      numExsit: 'the bank number already exists.',
      inputName: 'Please enter the account holder name.',
      formatErr: 'Holder name format incorrect',
      idNumber: 'Please enter ID number',
      idNumFormat: 'Format error',
      phoneFormat: 'Format error',
      ICBC: 'ICBC',
      BOC: '(BOC) Bank of China',
      CCB: '(CCB) China Construction Bank',
      ABC: '(ABC) Agricultural Bank of China',
      BOCOM: '(BOCOM) Bank of Communications',
      isDel: 'Delete bank card',
      branchBank: 'Branch',
      branchBankFormat: 'Format error',
      cardNumberPay: 'Account number cannot be empty.',
      selectBank: 'Select BankCard',
      selectBankFormat: '银行卡格式不对',
      noBank: 'You haven\'t added a bank card yet.'
    },
    information: {
      username: 'User name',
      regName: 'Registrant',
      referees: 'Referrer',
      coupons: 'Coupon',
      get: 'Claimed',
      geted: 'Coupon claimed',
      updatePass: 'Change password',
      currentPw: 'Current password',
      newPw: 'New password',
      copy: 'Copy',
      generated: 'Re-enter generated password',
      backup: 'Private key changes when you reset your password; Please back up your private key.',
      reset: 'Reset',
      phone: 'Phone number',
      getCoupon: 'Claim coupons',
      againInput: 'Re-enter the password',
      notMatch: 'Passwords do not match!',
      inputPhone: 'Please enter phone number',
      inputCode: 'Please enter the massage verification code',
      resend: 'Resend the verification code',
      resendTime: 'Resend',
      send: 'Authentication code',
      sendSucc: 'Sent authentication code successfully, please check on your mobile.',
      sendErr: 'Failed to send the authentication code, please try again later.',
      updatePw: 'Change password',
      updateAsset: 'Change asset password',
      updateSucc: 'Change successfully',
      getSucc: 'Claimed coupon',
      couponsTotal: 'Total coupon amount',
      afterUse: 'Reached the maximum coupon amount. Please use your coupons first.',
      updatePhone: 'Update the mobile number',
      bindSucc: 'Bound successfully',
      bindEnd: 'Mobile number was already bound.',
      bindErr: 'Failed to bind the mobile number.',
      KYC: 'Real name authentication',
      nationality: 'Nationality',
      noBind: 'Mobile phone not bound',
      bind: 'Bind phone number',
      nokyc: 'Unverified',
      review: 'Under review',
      through: 'Already passed',
      nothrough: 'Not passed',
      lookinfo: 'Check your verification information',
      china: 'China',
      uploadPhoto: 'Upload Photo',
      errorPwd: 'Old passward error, please re-enter it.',
      cad: 'Canada',
      mail: 'Email',
      bindEmail: 'Bind Mail',
      reBindEmail: 'reBind Mail'
    },
    permission: {
      masterKey: 'Owner Key',
      ownerKey: 'Owner Key is the highest permission of account, it\'s used to overwrite other permissions. ',
      publicKey: 'Public key',
      privateKeyShow: 'Check',
      privateKeyHidden: 'Hide private key',
      privateKey: 'Private Key',
      assetKey: 'Active Key',
      activeKey: 'Active Key can control transfer and manage memo permissions.',
      momeKey: 'Memo Key',
      memoKey: 'The memo information attached to the transaction is transmitted after encrypted by public memo key, and only a corresponding private key of the public key can decrypt it. '
    },
    page: {
      platform: 'An open platform for smart finance',
      synchronization: 'Blockchain data is out of date, please wait for the data synchronization.',
      latency: 'Network delay',
      latest: 'Latest block',
      connection: 'Connection break',
      connected: 'Connected',
      withdrawal: 'Amount',
      bankCard: 'Bank card',
      selectCard: 'Please choose the bank card.',
      inputWith: 'Please enter the amount.',
      formatNum: 'Invalid amount',
      onlySend: '1. Please don’t deposit any other crypto assets except for',
      only: '',
      through: ' to the above address. Otherwise, you may lose your assets permanently. ',
      loseYou: '2. Depositing to the above address requires confirmations of the entire network. It will arrive after 1 confirmations, and it will be available to withdraw after 6 confirmations. ',
      coinHint1: '3. Min deposit amount: ',
      coinHint2: '. Any deposits less than the minimum will not be credited or refunded.',
      rechargeAddress: '4. Your deposit address won’t change often. For any changes, we will notify you via announcement or email.',
      rechargeSecurity: '5. Please make sure that your computer and browser are secure and your information is protected from being tampered or leaked.',
      minimum: 'Min deposit: xxxCNY.',
      selectAddress: 'Please choose the address.',
      mention: 'Amount',
      validationFail: 'Verification failure',
      guidelines: 'Notice:',
      minimumTopup: 'Min deposit:',
      cny: 'CNY',
      completion: 'After recharge, the amount will be funded to the account within 20 minutes.',
      fees: 'No recharge fee (fee charged by the remitting bank is your own responsibility) ',
      amount: 'Amount',
      way: 'Methods',
      bank: 'Bank card',
      paypal: 'Alipay',
      paypalName: 'Name',
      paypalNum: 'Alipay account name',
      next: 'Next',
      information: 'Deposit information',
      steps: 'Process',
      steps1: 'Step 1: Log in your bank account online, and make the remittance.',
      steps2: 'Step 1: Log in your Aplipay account, and make the remittance.',
      steps3: 'Step 2: Fill in the remittance information as below.',
      payee: 'Beneficiary',
      payeeAccount: 'Beneficiary account No.',
      bankAccount: 'Beneficiary bank name',
      bankPayment: 'Remitter bank name',
      remittance: 'Amount',
      payerAccount: 'Remitter account No.',
      postscript: 'Message',
      steps4: 'Step 3: Please be sure to complete the remittance in accordance with the above requirements, then click "Completed".',
      complete: 'Completed',
      cancel: 'Cancel',
      inputAmount: 'Please enter the amount.',
      amountFormat: 'Format error',
      lessThan: 'The amount cannot be less than 100.',
      fill: 'Please enter the account No.',
      fillColl: 'Invalid account No.',
      name: 'Please enter the cardholder name.',
      nameColl: 'Invalid name',
      reviewing: 'The platform is reviewing your deposit information, please wait with patience.',
      minFull: 'Min deposit:',
      fillAddress: 'Address',
      cancelHine: 'The deposit order was cancelled successfully.',
      rechargeHint1: 'You have an uncompleted deposit order. Please complete it first.',
      rechargeHint2: 'Failed for five times, you cannot go on with the deposit operation any more today.',
      rechargeHint3: 'Please ensure the account name to be same as your real name before you conduct withdrawal',
      orderStatus: 'Status',
      orderTime: 'Remaining time',
      orderPayHint: 'Don\'t  make the payment again.',
      confirm: 'Confirm',
      chargeNotice: 'Tips',
      chargeCopy: 'You can copy and paste the following address at the website',
      chargeOr: 'OR',
      chargeQrCode: 'Scan following QR Code in App'
    },
    historyinfo: {
      searchAccount: 'Search for account',
      search: 'Search',
      loanInfo: 'Loan info',
      investInfo: 'Investment info',
      noAccount: 'The account name does not exist.',
      noEmpty: 'The account name cannot be empty.',
      gotoInvest: 'To Invest'
    },
    home: {
      summary: 'Data Statistics',
      safe: 'Operating:',
      borrowNum: 'Loan Orders',
      todayNum: 'Today\'s Loan Orders',
      investNum: 'Investment Orders',
      todayInverNum: 'Today\'s Investment Orders',
      cumulative: 'All Orders',
      trading: 'Trading Pair',
      amount: 'Loan Amount',
      borrowAmount: 'Number of Loans',
      pen: '',
      obtained: 'Net Profit',
      today: 'Today\'s Orders',
      borrowing: 'Latest Loan',
      investing: 'Latest Investment',
      user: 'User',
      mortgage: 'Mortgaged',
      borrow: 'Borrowed',
      loan: 'Invested',
      investOrders: 'Number of Investments',
      average: 'Avg principal guaranteed rate',
      day: 'Day',
      week: 'Week',
      loanAmount: 'Number of loans',
      collateral: 'Number of investments',
      orderCount: 'Number of orders',
      highRisk: 'High risk',
      lowRish: 'Low risk',
      safes: 'Safe',
      total: 'Total',
      toBorrow: 'Borrow',
      business: 'Business Advantage',
      threshold: 'Low Borrowing Threshold',
      anyTime: 'Mortgage cryptocurrency to borrow fiat, and repay it whenever you want within the loan term.',
      welfare: 'Plenty of Rewards',
      activity: 'Invite your friends to join us to make mining and trading. The wondeful activities wait for you every month.',
      diversity: 'Various Currencies',
      financing: 'are supported in the short-term financing for crypto holders.',
      income: 'High-return Lending',
      investment: ' The investment amount starts from 100 USD.',
      globalization: 'Business Globalization',
      enjoy: 'Access the financial resources and services from all aruond the world.',
      process: 'Operation Flow',
      platform: 'Visit ZOS Website',
      corner: 'Click Signup/Login to create an account, or login directly with your existing account.',
      identity: 'Your account is the unique identity on ZOS blockchain, please make sure to keep the password carefully and remember it.',
      products: 'All ZOS products are accessible for your ZOS account.',
      prepaid: 'Deposit',
      assets: 'Check your assets on Asset page.',
      account: 'Click Deposit, you can deposit fiat and crypto currencies in your account.',
      fiat: 'KYC authentication is required before depositing fiat currency.',
      investments: 'Borrow/Invest',
      tender: 'You can borrow or invest with the assets in your account.',
      ensure: 'After the loan is done, you need to pay the monthly interest to maintain your collateral and credit.',
      interest: 'After the investment is done successfully, you can get the interest return every month.',
      borrower: 'If the borrower defaulted, the operator will dispose the collateral to ensure the investor\'s interests and rights.',
      currency: 'Withdraw',
      timely: 'The loan fund and the return on investment will be respectively released to users\' account in real time, ',
      returns: 'and you can withdraw them whenever you want.',
      click: 'Click here, ',
      see: ' to check more information.',
      security: 'Security',
      guaranteed: 'Guarantee of Principal',
      breakeven: 'Blockchain contracts automatically implement the principal guaranteed rate promised by the operator. ',
      specified: 'Guaranteed by Full Mortgage',
      digital: 'The borrower mortgages in full with 150% cryptocurrency.',
      operators: 'Risk Provision for Operators',
      provide: 'Risk provision, which is used for investment indemnity, is set for operators according to the business volume. '
    },
    proposalList: {
      Bill: 'Proposal No.',
      originator: 'Originator',
      edit: 'Loan parameter modification',
      expiration: 'Expiry time',
      agreed: 'Agreed list',
      agree: 'Agree',
      undo: 'Cancel',
      payment: 'Payment account',
      agreeAdd: 'Approve to add',
      account: 'Please choose the account.',
      confirm: 'Update the proposal confirmation',
      agreeAccount: 'Approve account',
      payAccount: 'Payment account',
      details: 'Proposal details',
      beEdit: 'Before modification',
      myproposal: 'My proposal',
      other: 'Other proposals'
    },
    authentication: {
      title: 'KYC Authentication',
      inputName: 'Please enter your name.',
      nameError: 'Format error',
      inputIDsCode: 'Please enter your ID number',
      inputIDsType: 'Please choose ID type',
      inputCountry: 'Please choose nationality',
      isZQ: 'Please enter the correct ID number',
      IDCard: 'Identity Card',
      passport: 'Passport',
      ok: 'Save',
      cancel: 'Cancel',
      hint: 'To ensure the security of transaction, please fill in the following information patiently',
      hint1: 'Please upload two sides of ID card and your photo with ID card in hand, three photos in total',
      hint2: 'Please upload the first page of your passport and your photo with passport in hand, two photos in total',
      hint3: '(Support JPG and PNG format only, and a maximum size of 1MB)',
      countyCode: 'Nationality',
      name: 'Name',
      IDsType: 'ID type',
      IDsCode: 'ID number',
      Chainstatus: 'Status on Chain',
      uploadImg: 'ID photo',
      successHint: 'Submitted successfully',
      useAgreement: 'Terms of Use',
      protectionAgreement: 'Privacy Policy',
      kycState1: 'Your authentication information is under review',
      kycState2: 'Your authentication information passed the review.',
      kycState3: 'Failed',
      noKyc: 'You did not complete the real name anthentication yet, please submit the authentication information first.'
    },
    drawcash: {
      title: 'Tips',
      info1: '1.Withdrawal range: 100-50,000 CNY',
      info2: '2.The bank account name for withdrawal must be the same as the authenticated real name, and the bank card information shall be correctly filled in. Credit card cannot be set as the bank card for withdrawal. ',
      info3: '3.After the withdrawal application is submitted, it\'ll be available within 24 hours.',
      info4: '4.It\'s fee of charge(the fee charged by the remitting bank is your responsibility) ',
      errorHint: 'The amount of a withdrawal shall be between 100 and 50,000 yuan.'
    },
    drawcoin: {
      title: 'Tips',
      info1: '1.Your address must support receiving ',
      info2: '. Otherwise, you may lose your assets permanently.',
      info3: '2.Min withdrawal amount: ',
      info4: '3.No fee is charged for withdrawal, while transactions on ',
      info5: ' blockchain generate a trading fee.',
      info6: '4.The actual amount received is the amount of withdrawal minus the trading fee on ',
      info7: 'blockchain.'
    },
    gatewayContactType: {
      wechat: 'Wechat',
      qq: 'QQ',
      phone: 'Tel.',
      email: 'Email',
      whatsapp: 'Whatsapp',
      twitter: 'Twitter',
      facebook: 'Facebook',
      telegram: 'Telegram',
      line: 'Line'
    },
    httpUtils: {
      warning: 'The current network is unstable, or request failed'
    },
    bankcardInfo: {
      branchName: ' Branch ',
      bankName: 'Bank Name',
      bankAddress: 'Bank Address',
      swift: 'SWIFT Code',
      iban: 'IBAN Code',
      country: 'Country',
      noCard: ' Your name given in bank card and identity authentication shall be consistent ',
      bankAccount: 'Bank Account',
      bankCountry: 'Bank Country',
      confirm: 'Conifrm',
      cancel: 'Cancel',
      enter: 'Please enter the '
    },
    amountRangeInfo: {
      minRechargeAmount: 'Minimum deposit amount',
      minDrawAmount: 'Minimum withdraw amount',
      maxRechargeAmount: 'Maximum deposit amount',
      maxDrawAmount: 'Maximum withdraw amount'
    },
    rechargeDialog: {
      deposit: 'Deposit',
      depositAmount: 'Deposit Amount',
      digitalAccount: ' To crypto account ',
      ninimumOf: 'Minimum amount',
      accountHolderName: 'Account Holder Name',
      selectBankcard: 'Select a bankcard',
      bankAccount: 'Bank Account',
      bankName: 'Bank Name',
      branch: 'Branch',
      notice: 'Notice',
      noticeInfo1: '• Deposit Amount:',
      noticeInfo2: '• You shall pay the transfer fee to the remitting bank. No extra fee is required.',
      next: 'Next',
      depositDetails: 'Deposit Details',
      unpaid: 'Unpaid',
      remaining: 'Remaining time',
      receiverInfo: ' Payee Info ',
      receiver: 'Payee Name',
      account: 'Account',
      copy: 'Copy',
      remittance: 'Remittance',
      reference: 'Reference',
      payerInfo: ' Payer info ',
      operatingSteps: ' Operating steps:',
      steps1: '1. Log in your bank account online, or go to the bank counter to do transfer business.',
      steps2: '2. Transfer money according to the above information.',
      steps3: '3. Click “Confirm” after you complete the transfer.',
      cancel: ' Cancel',
      confirm: 'Confirm'
    },
    drawDialog: {
      withdraw: 'Withdraw',
      digitalAccount: 'Withdraw cash from crypto account ',
      withdrawalToBank: ' to bank card',
      withdrawalAmount: 'Withdraw Amount',
      minimumOf: 'Minimum withdraw amount',
      available: 'Available',
      optional: 'Optional ',
      notice: 'Notice',
      noticeInfo1: '• Withdraw amount:',
      noticeInfo2: '• You shall pay the transfer fee to the remitting bank. No extra fee is required.'
    },
    balance_utypes: {
      1: 'Worker Exchange & Withdraw',
      3: 'Authorize Fiat Permission to Gateway',
      4: 'User Withdraw',
      5: 'Gateway Deposit Deduction',
      6: 'Withdraw Assets to Gateway',
      7: 'User Deposit',
      8: 'Issue Asset',
      9: 'Burn Asset',
      10: 'Deposit to Pool',
      13: 'Interest Payment Deduction',
      16: 'Repay principal to investor',
      17: 'Return collateral to borrower',
      18: 'Pay interest to investor',
      20: 'Freeze collateral',
      21: 'Freeze investment',
      22: 'Release loan funds to borrower',
      23: 'Gateway service fee',
      24: 'Platform service fee',
      25: 'Risk reserve to operator',
      26: 'Service fee to borrower"s reference',
      27: 'Service fee to borrower"s operator',
      28: 'Service fee to investor"s reference',
      29: 'Service fee to investor"s opeartor',
      30: 'Pay interest',
      31: 'Pay interest overdue ',
      32: 'Return collateral to borrwoer',
      33: 'Repay principal',
      34: 'Repay principal overdue',
      35: 'Return NPL to investor',
      36: 'Mortgage coins to operator',
      37: 'Deduct the loan paid by operator',
      38: 'Call margin',
      39: 'Pay interest automatically',
      40: 'Budget committee member mortgage coins',
      41: 'Operator mortgage coins',
      42: 'Committee member mortgage coins',
      43: 'Anonymous transfer',
      44: 'Anonymous transfer fee',
      45: 'Withdraw coins for Anonymous transfer',
      47: 'Platform service fee',
      52: 'Return investment fund for failed loan',
      53: 'Return collateral for failed loan',
      60: 'Burn coins',
      61: 'Enable financing',
      62: 'Cancel financing',
      63: 'Create a financing',
      64: 'Gateway mortgage coins',
      69: 'Transfer Deduction',
      70: 'Transfer to the account',
      71: 'Freeze the transfer deduction',
      75: 'Withdraw the frozen funds to the account',
      78: 'Witness mortgage coins',
      79: 'Deduction for upgrading account',
      81: 'Worker mortgage',
      83: 'Recover the frozen transfer',
      84: 'Deduct service fee of borrower',
      85: 'Service fee of borrower"s operator',
      86: 'Service fee of investor"s operator',
      88: 'Cancel the authorized credit of gateway',
      90: 'Refund for canceling account upgrade',
      2147483647: 'All'
    },
    selectGateway: {
      selectGateway: 'select Gateway',
      gatewayAccount: 'gateway Account',
      totalCharge: 'total Charge amount',
      totalWithdrawal: 'total Withdrawal amount',
      operation: 'operation',
      goto: 'goto',
      noAvailable: 'No gateway available'
    }
  }
}
